events {
    multi_accept on;
}

stream {
    upstream redis_server {
        server redis:6379;
    }

    upstream postgres_server {
        server postgres:5432;
    }

    server {
        listen 6379 so_keepalive=on;
        proxy_pass redis_server;
    }

    server {
        listen 5432 so_keepalive=on;
        proxy_pass postgres_server;
    }
}

http {
    resolver 127.0.0.11 valid=15s;

    server {
        listen 80;
        listen [::]:80;

        ignore_invalid_headers off;
        client_max_body_size 100M;
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            set $backend "http://client";
            proxy_pass $backend;
        }

        location /api {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            set $backend "http://server:3000";
            proxy_pass $backend;
        }

        location /swagger {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            set $backend "http://server:3000";
            proxy_pass $backend;
        }

        include /etc/nginx/extra-conf.d/*.conf;
    }
}
